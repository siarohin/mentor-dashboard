{"version":3,"sources":["serviceWorker.js","components/SocialButton/SocialButtonList.js","firebase/firebase.js","firebase/auth.js","components/Login/index.js","components/SocialButton/SocialProfileList.js","components/constant.js","components/Tasks/index.jsx","components/StudentCard/index.jsx","components/SelectForm/index.jsx","components/Dashboard/index.js","containers/App.js","containers/withAuthentication.js","index.js"],"names":["Boolean","window","location","hostname","match","SocialButtonList","_ref","history","buttonList","auth","currentProviders","authHandler","authData","push","user","providerData","console","error","react_default","a","createElement","className","Object","keys","map","provder","visible","key","concat","onClick","e","provider","providerOAuth","currentUser","linkWithPopup","then","catch","err","signInWithPopup","authenticate","defaultProps","withRouter","app","firebase","initializeApp","apiKey","authDomain","getAuth","githubOAuth","firebase_","GithubAuthProvider","github","addScope","Login","_this","this","onAuthStateChanged","props","components_SocialButton_SocialButtonList","Component","SocialProfileList","handleProviderUnlink","_callee","_this$props","unlinkedProvider","providers","regenerator_default","wrap","_context","prev","next","confirm","unlink","sent","stop","renderProfileList","_ref2","providerId","photoURL","providerName","split","src","alt","react","PureComponent","CONSTANT","root","task","gitHubURL","rssGithub","privatePrefix","showClassList","defaultClass","specialClass","TaskName","name","specification","defaultName","title","href","TaskStatus","_ref3","status","statusDescription","TaskComponent","_ref4","Tasks_TaskName","Tasks_TaskStatus","Header","studentGithub","publicGit","privateGit","github_default","StudentCard","tasks","StudentCard_Header","components_Tasks","handleChange","value","mentors","document","querySelectorAll","mentor","querySelector","forEach","section","classList","add","target","remove","showSection","showSectionAll","options","label","SelectForm","data","isDisabled","mentorGithub","react_select_esm","onChange","Dashboard","state","Data","handleCurrentProviders","updateProviders","objectSpread","updateButtonList","setState","handleUnliknedProvider","length","delete","log","defineProperty","_this$state","components_SocialButton_SocialProfileList","signOut","SelectForm_SelectForm","mentorName","mentorCity","students","data-name","StudentCard_StudentCard","App","BrowserRouter","Switch","Route","path","exact","component","WrappedComponent","_Component","WithAuthentication","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","_this2","info","assign","Delay_default","wait","ReactDOM","render","src_containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.607d0ee9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './SocialButtonList.css';\r\n\r\nconst propTypes = {\r\n  buttonList: PropTypes.shape({\r\n    github: PropTypes.shape({\r\n      visible: PropTypes.bool.isRequired,\r\n      provider: PropTypes.func.isRequired\r\n    })\r\n  }).isRequired,\r\n  auth: PropTypes.func.isRequired,\r\n  currentProviders: PropTypes.func\r\n};\r\n\r\nconst defaultProps = {\r\n  currentProviders: null\r\n};\r\n\r\nconst SocialButtonList = ({ history, buttonList, auth, currentProviders }) => {\r\n  const authHandler = authData => {\r\n    if (authData) {\r\n      if (currentProviders === null) {\r\n        history.push('/dashboard');\r\n      } else {\r\n        currentProviders(authData.user.providerData);\r\n      }\r\n    } else {\r\n      console.error('Error authenticating');\r\n    }\r\n  };\r\n\r\n  const authenticate = (e, provider) => {\r\n    const providerOAuth = buttonList[provider].provider();\r\n\r\n    if (!auth().currentUser) {\r\n      auth()\r\n        .signInWithPopup(providerOAuth)\r\n        .then(authHandler)\r\n        .catch(err => console.error(err));\r\n    } else {\r\n      auth()\r\n        .currentUser.linkWithPopup(providerOAuth)\r\n        .then(authHandler)\r\n        .catch(err => console.error(err));\r\n    }\r\n  };\r\n\r\n  const renderButtonList = provder => {\r\n    const visible = buttonList[provder].visible;\r\n\r\n    return (\r\n      <button\r\n        key={provder}\r\n        className={`btn__social btn--${provder} ${!visible && 'hidden'}`}\r\n        onClick={e => authenticate(e, provder)}\r\n      >\r\n        {provder}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"btn__social--list\">\r\n      {Object.keys(buttonList).map(renderButtonList)}\r\n    </div>\r\n  );\r\n};\r\n\r\nSocialButtonList.propTypes = propTypes;\r\nSocialButtonList.defaultProps = defaultProps;\r\n\r\nexport default withRouter(SocialButtonList);","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: 'AIzaSyA3BUhMZSSqAmdBDeUHowRDs964a5VCM9Y',\r\n  authDomain: 'mentor-dashboard-5d31f.firebaseapp.com'\r\n});\r\n\r\nexport default app;","import firebase from './firebase';\r\n\r\nexport const getAuth = () => {\r\n  return firebase.auth();\r\n};\r\n\r\nexport const githubOAuth = () => {\r\n  return new firebase.firebase_.auth.GithubAuthProvider();\r\n};","import React, { Component } from 'react';\r\nimport SocialButtonList from '../SocialButton/SocialButtonList';\r\nimport { auth } from '../../firebase';\r\n\r\nconst buttonList = {\r\n  github: {\r\n    visible: true,\r\n    provider: () => {\r\n      const provider = auth.githubOAuth();\r\n      provider.addScope('user');\r\n      return provider;\r\n    }\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  componentDidMount() {\r\n    auth.getAuth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.props.history.push('/dashboard');\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SocialButtonList buttonList={buttonList} auth={auth.getAuth} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SocialProfileList.css';\r\n\r\nclass SocialProfileList extends PureComponent {\r\n  static propTypes = {\r\n    auth: PropTypes.func.isRequired,\r\n    providerData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    unlinkedProvider: PropTypes.func.isRequired\r\n  };\r\n\r\n  /**\r\n   * Unlinks a provider from the current user account\r\n   */\r\n  handleProviderUnlink = async (e, provider) => {\r\n    const { auth, unlinkedProvider } = this.props;\r\n\r\n    if (window.confirm(`Do you really want to unlink ${provider}?`)) {\r\n      const providers = await auth()\r\n        .currentUser.unlink(`${provider}.com`)\r\n        .catch(err => console.error(err));\r\n\r\n      unlinkedProvider(provider, providers.providerData);\r\n    }\r\n  };\r\n\r\n  renderProfileList = ({ providerId, photoURL }) => {\r\n    const providerName = providerId.split('.')[0];\r\n\r\n    return (\r\n      <div className=\"container__profile\" key={providerName}>\r\n        <img\r\n          src={photoURL}\r\n          alt={providerName}\r\n          className=\"container__profile--photo\"\r\n        />\r\n        <p>{providerName}</p>\r\n        <button\r\n          className=\"container__profile--btn\"\r\n          onClick={e => this.handleProviderUnlink(e, providerName)}\r\n        >\r\n          Unlink\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <p className=\"text--center\">\r\n          <strong>Connected Social Accounts</strong>\r\n        </p>\r\n        <div className=\"btn__profiles--list\">\r\n          {this.props.providerData.map(this.renderProfileList)}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialProfileList;","export const CONSTANT = {\r\n  root: 'Mentor\\'s Dashboard',\r\n  task: 'Rolling Scopes Specification',\r\n  gitHubURL: 'http://github.com',\r\n  rssGithub: 'rolling-scopes-school',\r\n  privatePrefix: '2018Q3'\r\n};","import React from 'react';\r\nimport { CONSTANT } from '../constant';\r\nimport './index.css';\r\n\r\n\r\nconst showClassList = ({ defaultClass, specialClass }) => {\r\n  switch (specialClass) {\r\n    case ('checked'): return `${defaultClass} task__process_checked`;\r\n    case ('todo'): return `${defaultClass} task__process_todo`;\r\n    case ('in progress'): return `${defaultClass} task__process_inprocess`;\r\n    case ('checking'): return `${defaultClass} task__process_tocheck`;\r\n    case ('nochecked'): return `${defaultClass} task__process_nochecked`;\r\n    default: return defaultClass;\r\n  }\r\n};\r\n\r\n\r\nconst TaskName = ({ name, specification }) => {\r\n  const defaultName = `${CONSTANT.task}`;\r\n  if (!!specification) {\r\n    return (\r\n      <a className=\"task__specification\" title={`${ defaultName }: ${ name }`} href={ specification }>\r\n        { name }\r\n      </a>\r\n    )\r\n  }\r\n  return `${ name }`\r\n};\r\n\r\n\r\nconst TaskStatus = ({ status, statusDescription }) => {\r\n  return (\r\n    <div className={ showClassList({\r\n      defaultClass: 'task__process',\r\n      specialClass: status,\r\n      }) }>\r\n        { status }\r\n      <span className=\"task__process_tooltip\">\r\n        { statusDescription }\r\n      </span>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst TaskComponent = ({ props }) => {\r\n  const { name, status, specification, statusDescription } = props;\r\n  return (\r\n    <div className=\"task\" key={ name }>\r\n      <div className=\"task__title\">\r\n        <TaskName specification={ specification } name={ name } />\r\n      </div>\r\n        <TaskStatus status={ status } statusDescription={ statusDescription } />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TaskComponent;","import React, { Fragment } from 'react';\r\nimport FaGithub from 'react-icons/lib/fa/github';\r\nimport TaskComponent from '../Tasks/';\r\nimport { CONSTANT } from '../constant';\r\nimport './index.css';\r\n\r\nconst { gitHubURL, rssGithub, privatePrefix } = CONSTANT;\r\n\r\nconst Header = ({ studentGithub }) => {\r\n  const publicGit = `${ gitHubURL }/${ studentGithub }`;\r\n  const privateGit = `${ gitHubURL }/${ rssGithub }/${ studentGithub }-${ privatePrefix }`;\r\n    return (\r\n      <Fragment>\r\n        <h2 className=\"students__title\">@{ studentGithub }</h2>\r\n          <div className=\"students__github\">\r\n            <a className=\"students__github-link\" href={ publicGit } title=\"public\">\r\n              <FaGithub />\r\n            </a>\r\n            <a className=\"students__github-link private\" href={ privateGit } title=\"private\">\r\n              <FaGithub />\r\n            </a>\r\n          </div>\r\n      </Fragment>\r\n    )\r\n};\r\n\r\nexport const StudentCard = ({ studentGithub, tasks }) => {\r\n  return (\r\n    <article className=\"students__data\" key={ studentGithub }>\r\n      <Header studentGithub={ studentGithub } className=\"students__title\" />\r\n        {tasks.map(({ name, status, specification, statusDescription }) => (\r\n          <TaskComponent key={ name } props={{ tasks, name, status, specification, statusDescription }} />\r\n        ))}\r\n    </article>\r\n  )\r\n};","import React from 'react';\r\nimport Select from 'react-select';\r\nimport './index.css';\r\n\r\n\r\nconst hiddenSectionAll = (target) => {\r\n  target.forEach((section) => {\r\n    section.classList.add('hidden');\r\n  });\r\n};\r\n\r\nconst showSectionAll = (target) => {\r\n  target.forEach((section) => {\r\n    section.classList.remove('hidden');\r\n  });\r\n};\r\n\r\nconst showSection = (target) => {\r\n  target.classList.remove('hidden');\r\n};\r\n\r\n\r\nconst handleChange = ({ value }) => {\r\n  const mentors = document.querySelectorAll('.mentor__github');\r\n  const mentor = document.querySelector(`[data-name=${value}]`);\r\n\r\n  if (!!mentor) {\r\n    hiddenSectionAll(mentors);\r\n    showSection(mentor);\r\n  } else {\r\n    showSectionAll(mentors);\r\n  }\r\n};\r\n\r\nconst options = [{ value: 'All', label: 'All' }];\r\n\r\nexport const SelectForm = ({ data, isDisabled }) => {\r\n  data.map(({ mentorGithub }) => {\r\n    return options.push(\r\n    {\r\n      value: mentorGithub,\r\n      label: mentorGithub,\r\n    })\r\n  });\r\n\r\n  return (\r\n    <section className =\"find-form\">\r\n      <Select\r\n          onChange={ handleChange }\r\n          options={ options }\r\n          isDisabled={ isDisabled }\r\n        />\r\n    </section>\r\n  )\r\n}","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SocialButtonList from '../SocialButton/SocialButtonList';\r\nimport SocialProfileList from '../SocialButton/SocialProfileList';\r\nimport { auth } from '../../firebase';\r\nimport Data from '../../data.json';\r\nimport { StudentCard } from '../StudentCard';\r\nimport { SelectForm } from '../SelectForm';\r\nimport { CONSTANT } from '../constant';\r\nimport './index.css';\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    data: Data,\r\n    title: CONSTANT.root,\r\n    buttonList: {\r\n      github: {\r\n        visible: true,\r\n        provider: () => {\r\n          const provider = auth.githubOAuth();\r\n          provider.addScope('user');\r\n          return provider;\r\n        }\r\n      }\r\n    },\r\n    providerData: this.props.providerData\r\n  }\r\n\r\n  static propTypes = {\r\n    providerData: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    providerData: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateProviders(this.state.providerData);\r\n  }\r\n\r\n  handleCurrentProviders = providerData => {\r\n    this.updateProviders(providerData);\r\n  };\r\n\r\n  updateProviders = providerData => {\r\n    let buttonList = { ...this.state.buttonList };\r\n    providerData.forEach(provider => {\r\n      const providerName = provider.providerId.split('.')[0];\r\n      buttonList = this.updateButtonList(buttonList, providerName, false);\r\n    });\r\n    this.setState({ buttonList, providerData });\r\n  };\r\n\r\n  handleUnliknedProvider = (providerName, providerData) => {\r\n    if (providerData.length < 1) {\r\n      auth\r\n        .getAuth()\r\n        .currentUser.delete()\r\n        .then(() => console.log('User Deleted'))\r\n        .catch(() => console.error('Error deleting user'));\r\n    }\r\n\r\n    let buttonList = { ...this.state.buttonList };\r\n    buttonList = this.updateButtonList(buttonList, providerName, true);\r\n\r\n    this.setState({ buttonList, providerData });\r\n  };\r\n\r\n  updateButtonList = (buttonList, providerName, visible) => ({\r\n    ...buttonList,\r\n    [providerName]: {\r\n      ...buttonList[providerName],\r\n      visible\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { data, title } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"root__title\">{ title }</h1>\r\n\r\n        <SocialProfileList\r\n          auth={auth.getAuth}\r\n          providerData={this.state.providerData}\r\n          unlinkedProvider={this.handleUnliknedProvider}\r\n        />\r\n        <SocialButtonList\r\n          buttonList={this.state.buttonList}\r\n          auth={auth.getAuth}\r\n          currentProviders={this.handleCurrentProviders}\r\n        />\r\n        <button\r\n          className=\"btn__logout\"\r\n          onClick={() => auth.getAuth().signOut()}\r\n        >\r\n          Logout\r\n        </button>\r\n\r\n        <SelectForm data={ data } isDisabled={ false } />\r\n\r\n        {data.map(({ mentorGithub, mentorName, mentorCity, students }) => (\r\n          <section className=\"mentor__github hidden\" data-name={ mentorGithub } key={ mentorGithub }>\r\n            <article className=\"mentor\">\r\n              <h2 className=\"mentor__title\">@{ mentorGithub }</h2>\r\n              <div className=\"mentor__data\">\r\n                { mentorName }\r\n                <span className=\"mentor__data-tooltip\">{ mentorCity }</span>\r\n              </div>\r\n\r\n              <div className=\"students\">\r\n                { students.map(({ studentGithub, tasks }) => (\r\n                  <StudentCard key={ studentGithub } studentGithub={ studentGithub } tasks={ tasks } />\r\n                )) }\r\n              </div>\r\n\r\n            </article>\r\n          </section>\r\n        ))}\r\n\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Login from '../components/Login';\r\nimport Dashboard from '../components/Dashboard';\r\nimport withAuthentication from '../containers/withAuthentication';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/dashboard\" component={withAuthentication(Dashboard)} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport Delay from 'react-delay';\r\nimport { auth } from '../firebase';\r\n\r\nexport default WrappedComponent => {\r\n  class WithAuthentication extends Component {\r\n    state = {\r\n      providerData: []\r\n    };\r\n\r\n    componentDidMount() {\r\n      auth.getAuth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          this.setState({ providerData: user.providerData });\r\n        } else {\r\n          console.info('Must be authenticated');\r\n          this.props.history.push('/');\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return this.state.providerData.length > 0 ? (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          providerData={this.state.providerData}\r\n        />\r\n      ) : (\r\n        <Delay wait={250}>\r\n          <p>Loading...</p>\r\n        </Delay>\r\n      );\r\n    }\r\n  }\r\n\r\n  return WithAuthentication;\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}