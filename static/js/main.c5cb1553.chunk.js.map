{"version":3,"sources":["serviceWorker.js","components/constant.js","components/Tasks/index.jsx","components/StudentCard/index.jsx","components/SelectForm/index.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","CONSTANT","root","task","gitHubURL","rssGithub","privatePrefix","showClassList","_ref","defaultClass","specialClass","concat","TaskName","_ref2","name","specification","defaultName","react_default","a","createElement","className","title","href","TaskStatus","_ref3","status","statusDescription","TaskComponent","_ref4","props","key","Tasks_TaskName","Tasks_TaskStatus","Header","studentGithub","publicGit","privateGit","react","github_default","StudentCard","tasks","StudentCard_Header","map","components_Tasks","handleChange","value","mentors","document","querySelectorAll","mentor","querySelector","forEach","section","classList","add","target","remove","showSection","showSectionAll","options","label","SelectForm","data","isDisabled","mentorGithub","push","react_select_esm","onChange","onSuccess","response","console","log","onFailure","error","App","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","Data","inherits","createClass","_this$state","GitHubLogin_default","clientId","SelectForm_SelectForm","mentorName","mentorCity","students","data-name","StudentCard_StudentCard","Component","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5cb1553.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const CONSTANT = {\r\n  root: 'Mentor\\'s Dashboard',\r\n  task: 'Rolling Scopes Specification',\r\n  gitHubURL: 'http://github.com',\r\n  rssGithub: 'rolling-scopes-school',\r\n  privatePrefix: '2018Q3'\r\n};","import React from 'react';\r\nimport { CONSTANT } from '../constant';\r\nimport './index.css';\r\n\r\n\r\nconst showClassList = ({ defaultClass, specialClass }) => {\r\n  switch (specialClass) {\r\n    case ('checked'): return `${defaultClass} task__process_checked`;\r\n    case ('todo'): return `${defaultClass} task__process_todo`;\r\n    case ('in progress'): return `${defaultClass} task__process_inprocess`;\r\n    case ('checking'): return `${defaultClass} task__process_tocheck`;\r\n    case ('nochecked'): return `${defaultClass} task__process_nochecked`;\r\n    default: return defaultClass;\r\n  }\r\n};\r\n\r\n\r\nconst TaskName = ({ name, specification }) => {\r\n  const defaultName = `${CONSTANT.task}`;\r\n  if (!!specification) {\r\n    return (\r\n      <a className=\"task__specification\" title={`${ defaultName }: ${ name }`} href={ specification }>\r\n        { name }\r\n      </a>\r\n    )\r\n  }\r\n  return `${ name }`\r\n};\r\n\r\n\r\nconst TaskStatus = ({ status, statusDescription }) => {\r\n  return (\r\n    <div className={ showClassList({\r\n      defaultClass: 'task__process',\r\n      specialClass: status,\r\n      }) }>\r\n        { status }\r\n      <span className=\"task__process_tooltip\">\r\n        { statusDescription }\r\n      </span>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst TaskComponent = ({ props }) => {\r\n  const { name, status, specification, statusDescription } = props;\r\n  return (\r\n    <div className=\"task\" key={ name }>\r\n      <div className=\"task__title\">\r\n        <TaskName specification={ specification } name={ name } />\r\n      </div>\r\n        <TaskStatus status={ status } statusDescription={ statusDescription } />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TaskComponent;","import React, { Fragment } from 'react';\r\nimport FaGithub from 'react-icons/lib/fa/github';\r\nimport TaskComponent from '../Tasks/';\r\nimport { CONSTANT } from '../constant';\r\nimport './index.css';\r\n\r\nconst { gitHubURL, rssGithub, privatePrefix } = CONSTANT;\r\n\r\nconst Header = ({ studentGithub }) => {\r\n  const publicGit = `${ gitHubURL }/${ studentGithub }`;\r\n  const privateGit = `${ gitHubURL }/${ rssGithub }/${ studentGithub }-${ privatePrefix }`;\r\n    return (\r\n      <Fragment>\r\n        <h2 className=\"students__title\">@{ studentGithub }</h2>\r\n          <div className=\"students__github\">\r\n            <a className=\"students__github-link\" href={ publicGit } title=\"public\">\r\n              <FaGithub />\r\n            </a>\r\n            <a className=\"students__github-link private\" href={ privateGit } title=\"private\">\r\n              <FaGithub />\r\n            </a>\r\n          </div>\r\n      </Fragment>\r\n    )\r\n};\r\n\r\nexport const StudentCard = ({ studentGithub, tasks }) => {\r\n  return (\r\n    <article className=\"students__data\" key={ studentGithub }>\r\n      <Header studentGithub={ studentGithub } className=\"students__title\" />\r\n        {tasks.map(({ name, status, specification, statusDescription }) => (\r\n          <TaskComponent key={ name } props={{ tasks, name, status, specification, statusDescription }} />\r\n        ))}\r\n    </article>\r\n  )\r\n};","import React from 'react';\r\nimport Select from 'react-select';\r\nimport './index.css';\r\n\r\n\r\nconst hiddenSectionAll = (target) => {\r\n  target.forEach((section) => {\r\n    section.classList.add('hidden');\r\n  });\r\n};\r\n\r\nconst showSectionAll = (target) => {\r\n  target.forEach((section) => {\r\n    section.classList.remove('hidden');\r\n  });\r\n};\r\n\r\nconst showSection = (target) => {\r\n  target.classList.remove('hidden');\r\n};\r\n\r\n\r\nconst handleChange = ({ value }) => {\r\n  const mentors = document.querySelectorAll('.mentor__github');\r\n  const mentor = document.querySelector(`[data-name=${value}]`);\r\n\r\n  if (!!mentor) {\r\n    hiddenSectionAll(mentors);\r\n    showSection(mentor);\r\n  } else {\r\n    showSectionAll(mentors);\r\n  }\r\n};\r\n\r\nconst options = [{ value: 'All', label: 'All' }];\r\n\r\nexport const SelectForm = ({ data, isDisabled }) => {\r\n  data.map(({ mentorGithub }) => {\r\n    return options.push(\r\n    {\r\n      value: mentorGithub,\r\n      label: mentorGithub,\r\n    })\r\n  });\r\n\r\n  return (\r\n    <section className =\"find-form\">\r\n      <Select\r\n          onChange={ handleChange }\r\n          options={ options }\r\n          isDisabled={ isDisabled }\r\n        />\r\n    </section>\r\n  )\r\n}","import React, { Component, Fragment } from 'react';\r\nimport Data from './data.json';\r\nimport { StudentCard } from './components/StudentCard';\r\nimport { SelectForm } from './components/SelectForm';\r\nimport { CONSTANT } from './components/constant';\r\nimport GitHubLogin from 'react-github-login';\r\nimport './App.css';\r\n\r\n\r\nconst onSuccess = response => console.log(response);\r\nconst onFailure = response => console.error(response);\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    data: Data,\r\n    title: CONSTANT.root,\r\n  }\r\n\r\n  render() {\r\n    const { data, title } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n      <h1 className=\"root__title\">{ title }</h1>\r\n\r\n      <GitHubLogin\r\n      clientId=\"7f772eb46164221790f5\"\r\n      onSuccess={onSuccess}\r\n      onFailure={onFailure}/>\r\n\r\n        <SelectForm data={ data } isDisabled={ false } />\r\n\r\n        {data.map(({ mentorGithub, mentorName, mentorCity, students }) => (\r\n          <section className=\"mentor__github hidden\" data-name={ mentorGithub } key={ mentorGithub }>\r\n            <article className=\"mentor\">\r\n              <h2 className=\"mentor__title\">@{ mentorGithub }</h2>\r\n              <div className=\"mentor__data\">\r\n                { mentorName }\r\n                <span className=\"mentor__data-tooltip\">{ mentorCity }</span>\r\n              </div>\r\n\r\n              <div className=\"students\">\r\n                { students.map(({ studentGithub, tasks }) => (\r\n                  <StudentCard key={ studentGithub } studentGithub={ studentGithub } tasks={ tasks } />\r\n                )) }\r\n              </div>\r\n\r\n            </article>\r\n          </section>\r\n        ))}\r\n\r\n      </Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}